kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: tmax-kafka-pvc
  namespace: tmaxos-infra
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 50Gi
  storageClassName: ssd-ceph-fs

---

kind: Service
apiVersion: v1
metadata:
  name: tmax-kafka-service
  namespace: tmaxos-infra
spec:
  ports:
    - name: external-port
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: internal-port
      protocol: TCP
      port: 29092
      targetPort: 29092
  selector:
    app: tmax-kafka
  type: LoadBalancer

---

kind: Service
apiVersion: v1
metadata:
  name: tmax-zookeeper-service
  namespace: tmaxos-infra
spec:
  ports:
    - name: client
      protocol: TCP
      port: 2181
      targetPort: 2181
    - name: follower
      protocol: TCP
      port: 2888
      targetPort: 2888
    - name: leader
      protocol: TCP
      port: 3888
      targetPort: 3888
  selector:
    app: tmax-kafka

---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: tmax-kafka
  namespace: tmaxos-infra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tmax-kafka
  template:
    metadata:
      labels:
        app: tmax-kafka
    spec:
      volumes:
        - name: tmax-kafka-volume
          persistentVolumeClaim:
            claimName: tmax-kafka-pvc
      containers:
        - resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: '2'
              memory: 2Gi
          name: tmax-zookeeper
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: '2181'
            - name: ZOOKEEPER_SERVER_ID
              value: '1'
            - name: ZOOKEEPER_DATA_DIR
              value: "/var/lib/zookeeper/data"
            - name: ZOOKEEPER_LOG_DIR
              value: "/var/lib/zookeeper/log"
          ports:
            - containerPort: 2181
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: tmax-kafka-volume
              mountPath: /var/lib/zookeeper/data
              subPath: zookeeper-data
            - name: tmax-kafka-volume
              mountPath: /var/lib/zookeeper/log
              subPath: zookeeper-log
          terminationMessagePolicy: File
          image: 'confluentinc/cp-zookeeper:7.0.1'
        - resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: '2'
              memory: 2Gi
          name: tmax-kafka
          env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'INTERNAL://${KAFKA IP ADDRESS}:29092,LISTENER_EXTERNAL://${KAFKA IP ADDRESS}:9092'
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT'
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'tmax-zookeeper-service:2181'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INTERNAL
            - name: KAFKA_BROKER_ID
              value: '1'
            - name: KAFKA_NUM_PARTITIONS
              value: '3'
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: '1'
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: 'false'
            - name: KAFKA_LOG_RETENTION_HOURS
              value: '72'
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: 'true'
          ports:
            - name: external
              containerPort: 9092
              protocol: TCP
            - name: internal
              containerPort: 29092
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: tmax-kafka-volume
              mountPath: /var/lib/kafka/data
              subPath: kafka-data
          image: 'confluentinc/cp-kafka:7.0.1'

